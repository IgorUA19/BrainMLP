library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity storage_datapath is -- got to have a statemachine  should be able to input and output 3 things at the same time
  port(
    clk			 	: in std_logic;
	 ramSelect		: in std_logic_vector(3 downto 0); -- which ram it will go to 
	 address			: in std_logic_vector(7 downto 0);
	 
	 writeEnable 	: in  std_logic;
	 
	 inValue			: in std_logic_vector(23 downto 0); -- holds 3 8 bit values for data wieghts, activation values are 16 bit and only one 
	 
	 outValue		: out std_logic_vector(23 downto 0) -- 
	 
--	 outA        : out std_logic_vector(63 downto 0);
--    outB        : out std_logic_vector(63 downto 0);
--    input       : in  std_logic_vector(63 downto 0);
--    
--    regASel     : in  std_logic_vector(3 downto 0);
--    regBSel     : in  std_logic_vector(3 downto 0);
--    writeRegSel : in  std_logic_vector(3 downto 0);
--    clk         : in  std_logic
    );
end storage_datapath;


architecture behavioral of storage_datapath is
  
  --signal in_clk	 : std_logic; -- maybe should initial to 0 for all of these
  signal in_wr		 : std_logic;
  signal in_ADDR	 : std_logic_vector (7 downto 0);
  signal in_DIN	 : std_logic_vector (23 downto 0);
  signal in_DOUT	 : std_logic_vector (23 downto 0);
  
  --signal wt_clk	 : std_logic; -- maybe should initial to 0 for all of these
  signal wt_wr		 : std_logic;
  signal wt_ADDR	 : std_logic_vector (7 downto 0);
  signal wt_DIN	 : std_logic_vector (23 downto 0);
  signal wt_DOUT	 : std_logic_vector (23 downto 0);
  
  --signal in_clk	 : std_logic; -- maybe should initial to 0 for all of these
  signal con_wr		 : std_logic;
  signal con_ADDR	 : std_logic_vector (7 downto 0);
  signal con_DIN	 : std_logic_vector (23 downto 0);
  signal con_DOUT	 : std_logic_vector (23 downto 0);
  
  signal act_wr		 : std_logic;
  signal act_ADDR	 : std_logic_vector (7 downto 0);
  signal act_DIN	 : std_logic_vector (23 downto 0);
  signal act_DOUT	 : std_logic_vector (23 downto 0);
  
  
  --signal in_clk	 : std_logic; -- maybe should initial to 0 for all of these
  signal out_wr		 : std_logic;
  signal out_ADDR	 : std_logic_vector (7 downto 0);
  signal out_DIN	 : std_logic_vector (23 downto 0);
  signal out_DOUT	 : std_logic_vector (23 downto 0);
  
  
  
  
  component RAM
	port (
		--i_clk		: in std_logic;
		WR			: in std_logic; 
		ADDR		: in std_logic_vector (7 downto 0); 
		DIN		: in std_logic_vector (23 downto 0); 
		DOUT		: out std_logic_vector (23 downto 0)); 
		);
		end component;
begin

	inputRam 			:  RAM port map( in_wr, in_ADDR, in_DIN, in_DOUT);
	weightRam 			:  RAM port map( in_wr, in_ADDR, in_DIN, in_DOUT);
	connectionRam 		:  RAM port map( in_wr, in_ADDR, in_DIN, in_DOUT);
	activationRam 		:  RAM port map( in_wr, in_ADDR, in_DIN, in_DOUT);
	outputRam 			:  RAM port map( in_wr, in_ADDR, in_DIN, in_DOUT);

  process (clk) is
  begin
    if rising_edge(clk) then
      if ramSelect='0001' then
			
		
	 end if;
  end process;
end behavioral;